#cloud-config
repo_update: true
repo_upgrade: all

preserve_hostname: true

users:
- default

- name: vault
  system: true
  home_dir: /var/lib/vault

write_files:
- path: /tmp/vault_server.yaml
  permissions: '0644'
  content: |
    ---
    vault_server::region: "${region}"
    vault_server::vault_tls_cert_path: "${vault_tls_cert_path}"
    vault_server::vault_tls_ca_path: "${vault_tls_ca_path}"
    vault_server::vault_tls_key_path: "${vault_tls_key_path}"
    vault_server::vault_unsealer_kms_key_id: "${vault_unsealer_kms_key_id}"
    vault_server::vault_unsealer_ssm_key_prefix: "${vault_unsealer_ssm_key_prefix}"

- path: /tmp/consul.yaml
  permissions: '0644'
  content: |
    ---
    consul::fqdn: "${fqdn}"
    consul::private_ip: "${private_ip}"
    consul::consul_master_token: "${consul_master_token}"
    consul::region: "${region}"
    consul::instance_count: "${instance_count}"
    consul::environment: "${environment}"
    consul::consul_encrypt: "${consul_encrypt}"
    consul::backup_bucket_prefix: "${backup_bucket_prefix}"
    consul::backup_schedule: "${backup_schedule}"
    consul::volume_id: "${volume_id}"

- path: /etc/systemd/system/puppet-download-manifests.service
  permissions: '0644'
  content: |
    [Unit]
    Description=Download puppet manifests
    Wants=network-online.target
    After=network.target network-online.target

    [Service]
    Environment=PATH=/usr/local/sbin:/sbin:/bin:/usr/sbin:/usr/bin:/opt/puppetlabs/bin:/opt/bin:/root/bin
    PermissionsStartOnly=true
    Restart=on-failure
    RestartSec=3
    ExecStart=/bin/sh -c 'set -e; aws s3 cp s3://${puppet_tar_gz_bucket_path} /tmp/puppet.tar.gz; mkdir -p /tmp/puppet-manifests; tar -xf /tmp/puppet.tar.gz -C /tmp/puppet-manifests/.; mkdir -p /tmp/puppet-manifests/modules/vault_server/hieradata; cp /tmp/vault_server.yaml /tmp/puppet-manifests/modules/vault_server/hieradata/vault_server.yaml; mkdir -p /tmp/puppet-manifests/modules/consul/hieradata; cp /tmp/consul.yaml /tmp/puppet-manifests/modules/consul/hieradata/consul.yaml'
    [Install]
    WantedBy=multi-user.target


- path: /etc/systemd/system/puppet-vault-init.service
  permissions: '0644'
  content: |
    [Unit]
    Description=Bootstrap vault using puppet
    Wants=network-online.target
    After=network.target network-online.target

    [Service]
    Environment=PATH=/usr/local/sbin:/sbin:/bin:/usr/sbin:/usr/bin:/opt/puppetlabs/bin:/opt/bin:/root/bin
    PermissionsStartOnly=true
    Restart=on-failure
    RestartSec=6
    SuccessExitStatus=0 2
    ExecStart=/opt/puppetlabs/bin/puppet apply --detailed-exitcodes --color no --environment production --modulepath /tmp/puppet-manifests/modules --hiera_config /tmp/puppet-manifests/modules/vault_server/hiera.yaml /tmp/puppet-manifests/modules/vault_server -e "include vault_server"
    [Install]
    WantedBy=multi-user.target

- path: /etc/systemd/system/puppet-consul-init.service
  permissions: '0644'
  content: |
    [Unit]
    Description=Bootstrap consul using puppet
    Wants=network-online.target
    After=network.target network-online.target
    [Service]
    Environment=PATH=/usr/local/sbin:/sbin:/bin:/usr/sbin:/usr/bin:/opt/puppetlabs/bin:/opt/bin:/root/bin
    PermissionsStartOnly=true
    Restart=on-failure
    RestartSec=6
    SuccessExitStatus=0 2
    ExecStart=/opt/puppetlabs/bin/puppet apply --detailed-exitcodes --color no --environment production --modulepath /tmp/puppet-manifests/modules --hiera_config /tmp/puppet-manifests/modules/consul/hiera.yaml /tmp/puppet-manifests/modules/consul -e "include consul"
    [Install]
    WantedBy=multi-user.target

- path: /usr/local/bin/download-spire.sh
  permissions: "0755"
  content: |
    #!/bin/bash
    set -euo pipefail

    SPIRE_VERSION=0.6.1
    DEST_DIR=$${DEST_DIR:-/tmp}
    curl -sL https://github.com/spiffe/spire/releases/download/$${SPIRE_VERSION}/spire-$${SPIRE_VERSION}-linux-x86_64-glibc.tar.gz > $${DEST_DIR}/spire.tar.gz
    cd /tmp
    tar zvxf spire.tar.gz
    cp -r spire-$${SPIRE_VERSION}/. /opt/spire
    mkdir -p /etc/spire/.data
    chmod 777 /etc/spire

    mkdir -p /etc/patroni
    cd /etc/patroni
    git clone https://github.com/zalando/patroni

    curl -sL https://download.postgresql.org/pub/repos/yum/9.6/redhat/rhel-7-x86_64/pgdg-centos96-9.6-3.noarch.rpm > /tmp/pgdg-centos96-9.6-6.noarch.rpm
    rpm -ivh /tmp/pgdg-centos96-9.6-6.noarch.rpm
    yum -y install postgresql96.x86_64 postgresql96-server.x86_64 postgresql96-devel.x86_64 postgresql96-contrib.x86_64
    ln -s /usr/pgsql-9.6/bin/* /usr/local/bin/
    ln -s /usr/pgsql-9.6/share/* /usr/local/share/

- path: /usr/local/bin/spire-create-entries.sh
  permissions: "0755"
  content: |
    #!/bin/bash
    set -euo pipefail

    /opt/spire/spire-server entry create \
        -parentID spiffe://${environment}/tarmak \
        -spiffeID spiffe://${environment}/tarmak/kubernetes \
        -selector unix:uid:{3000} \
        -selector unix:gid:{3000}

    /opt/spire/spire-server entry create \
        -parentID spiffe://${environment}/tarmak/kubernetes \
        -spiffeID spiffe://${environment}/tarmak/kubernetes/apiserver \
        -selector unix:uid:{3000} \
        -selector unix:gid:{3000}

    /opt/spire/spire-server entry create \
        -parentID spiffe://${environment}/tarmak/kubernetes \
        -spiffeID spiffe://${environment}/tarmak/kubernetes/controller-manager \
        -selector unix:uid:{3000} \
        -selector unix:gid:{3000}

    /opt/spire/spire-server entry create \
        -parentID spiffe://${environment}/tarmak/kubernetes \
        -spiffeID spiffe://${environment}/tarmak/kubernetes/scheduler \
        -selector unix:uid:{3000} \
        -selector unix:gid:{3000}

    /opt/spire/spire-server entry create \
        -parentID spiffe://${environment}/tarmak/kubernetes \
        -spiffeID spiffe://${environment}/tarmak/kubernetes/kubectl \
        -selector unix:uid:{3000} \
        -selector unix:gid:{3000}

    /opt/spire/spire-server entry create \
        -parentID spiffe://${environment}/tarmak/kubernetes \
        -spiffeID spiffe://${environment}/tarmak/kubernetes/proxy \
        -selector unix:uid:{10} \
        -selector unix:gid:{10}

    /opt/spire/spire-server entry create \
        -parentID spiffe://${environment}/tarmak/kubernetes \
        -spiffeID spiffe://${environment}/tarmak/kubernetes/kubelet \
        -selector unix:uid:{10} \
        -selector unix:gid:{10}

- path: /etc/systemd/system/spire-create-entries.service
  permissions: '0644'
  content: |
    [Unit]
    Description=Create Entries for Kubernetes components
    [Service]
    User=root
    Group=root
    ExecStart=/usr/local/bin/spire-create-entries.sh
    Restart=on-failure
    RestartSec=10
    [Install]
    WantedBy=multi-user.target

- path: /etc/patroni/postgres.yml
  permissions: "0755"
  content: |
    name: spire-${fqdn}
    scope: spire-${environment}
    consul:
      host: 127.0.0.1:8500
      url: http://127.0.0.1:8500
      port: 8500
      scheme: http
      token: ${consul_master_token}
    restapi:
      listen: ${private_ip}:8008
      connect_address: ${private_ip}:8008
    bootstrap:
      dcs:
        ttl: 30
        loop_wait: 10
        retry_timeout: 10
        maximum_lag_on_failover: 1048576
        postgresql:
          use_pg_rewind: true
          use_slots: false
      initdb:
      - encoding: UTF8
      - data-checksums
      pg_hba:
      - host replication replicator 127.0.0.1/32 md5
      - host replication replicator ${private_subnets} md5
      - host all all 0.0.0.0/0 md5
    users:
        vault:
            password:
            options:
                - createrole
                - createdb
    postgresql:
      listen: ${private_ip}:5432
      connect_address: ${private_ip}:5432
      data_dir: /etc/spire/.data
      pg_pass: /tmp/pgpass0
      use_slots: false
      maximum_lag_on_failover: 1048576
      authentication:
        replication:
          username: replicator
          password: rep-pass
        superuser:
          username: postgres
          password: password
      parameters:
        unix_socket_directories: '.'
    tags:
      nofailover: false
      noloadbalance: false
      clonefrom: false
      nosync: false

- path: /etc/systemd/system/postgresql.service
  permissions: '0644'
  content: |
    [Unit]
    Description=Start Postgresql distributed service
    [Service]
    User=vault
    Group=vault
    ExecStart=/etc/patroni/patroni/patroni.py /etc/patroni/postgres.yml
    Restart=on-failure
    RestartSec=10
    [Install]
    WantedBy=multi-user.target

- path: /etc/spire/ca.pem
  permissions: "0700"
  content: |
    -----BEGIN CERTIFICATE-----
    MIIBzDCCAVOgAwIBAgIJAJM4DhRH0vmuMAoGCCqGSM49BAMEMB4xCzAJBgNVBAYT
    AlVTMQ8wDQYDVQQKDAZTUElGRkUwHhcNMTgwNTEzMTkzMzQ3WhcNMjMwNTEyMTkz
    MzQ3WjAeMQswCQYDVQQGEwJVUzEPMA0GA1UECgwGU1BJRkZFMHYwEAYHKoZIzj0C
    AQYFK4EEACIDYgAEWjB+nSGSxIYiznb84xu5WGDZj80nL7W1c3zf48Why0ma7Y7m
    CBKzfQkrgDguI4j0Z+0/tDH/r8gtOtLLrIpuMwWHoe4vbVBFte1vj6Xt6WeE8lXw
    cCvLs/mcmvPqVK9jo10wWzAdBgNVHQ4EFgQUh6XzV6LwNazA+GTEVOdu07o5yOgw
    DwYDVR0TAQH/BAUwAwEB/zAOBgNVHQ8BAf8EBAMCAQYwGQYDVR0RBBIwEIYOc3Bp
    ZmZlOi8vbG9jYWwwCgYIKoZIzj0EAwQDZwAwZAIwE4Me13qMC9i6Fkx0h26y09QZ
    IbuRqA9puLg9AeeAAyo5tBzRl1YL0KNEp02VKSYJAjBdeJvqjJ9wW55OGj1JQwDF
    D7kWeEB6oMlwPbI/5hEY3azJi16I0uN1JSYTSWGSqWc=
    -----END CERTIFICATE-----

- path: /etc/spire/key.pem
  permissions: "0700"
  content: |
    -----BEGIN EC PRIVATE KEY-----
    MIGkAgEBBDAg2LbulXzQX1NF+2Di0RKzMWfEGioBhh/fFpx7yOEqka//TpaeU3O5
    QJRZXdWHKuagBwYFK4EEACKhZANiAARaMH6dIZLEhiLOdvzjG7lYYNmPzScvtbVz
    fN/jxaHLSZrtjuYIErN9CSuAOC4jiPRn7T+0Mf+vyC060susim4zBYeh7i9tUEW1
    7W+Ppe3pZ4TyVfBwK8uz+Zya8+pUr2M=
    -----END EC PRIVATE KEY-----

- path: /etc/spire/server.conf
  permissions: "0755"
  content: |
    server {
        bind_address = "0.0.0.0"
        bind_port = "8081"
        bind_http_port = "8080"
        trust_domain = "${environment}"
        data_dir = "/etc/spire/.data"
        plugin_dir = "/etc/spire/plugin"
        log_level = "DEBUG"
        umask = ""
        upstream_bundle = true
        svid_ttl = "5m"
        ca_ttl = "24h"
        ca_subject = {
            Country = ["GB"],
            Organization = ["Tarmak"],
            CommonName = "",
        }
    }
    plugins {
        DataStore "sql" {
            enabled = true
            plugin_data {
                database_type = "postgres"
                connection_string = "dbname=postgres user=postgres password=password host=${private_ip} port=5432 sslmode=disable"
            }
        }
        NodeAttestor "aws_iid" {
            enabled = true
            plugin_data {
                trust_domain = "${environment}"
            }
        }
        NodeResolver "noop" {
            enabled = true
            plugin_data {}
        }
        ServerCA "memory" {
            enabled = true
            plugin_data {
    	        trust_domain = "${environment}"
    	    }
        }
        UpstreamCA "disk" {
            enabled = true
            plugin_data {
                trust_domain = "${environment}"
                ttl = "15m"
                cert_file_path = "/etc/spire/ca.pem"
                key_file_path = "/etc/spire/key.pem"
            }
        }
    }

- path: /etc/systemd/system/spire-server.service
  permissions: '0644'
  content: |
    [Unit]
    Description=Spire server
    [Service]
    ExecStart=/opt/spire/spire-server run -config /etc/spire/server.conf
    Restart=on-failure
    RestartSec=10
    [Install]
    WantedBy=multi-user.target


runcmd:
- yum -y install epel-release
- yum -y install unzip jq curl gpg
- yum -y install gcc python-devel
- pip install --upgrade pip setuptools
- pip install --upgrade pip patroni[consul]
- /usr/local/bin/download-spire.sh
- systemctl start puppet-download-manifests.service puppet-vault-init.service puppet-consul-init.service spire-server.service postgresql.service spire-create-entries.service
- systemctl enable puppet-download-manifests.service puppet-vault-init.service puppet-consul-init.service spire-server.service postgresql.service spire-create-entries.service
