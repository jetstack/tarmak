#cloud-config
repo_update: true
repo_upgrade: all

write_files:

- path: /etc/systemd/system/wing.service
  permissions: '0644'
  content: |
    [Unit]
    Description=wing the tarmak node agent
    Wants=network-online.target
    After=network.target network-online.target

    [Service]
    Environment=AWS_REGION=${region}
    Environment=PATH=/usr/local/sbin:/sbin:/bin:/usr/sbin:/usr/bin:/opt/puppetlabs/bin:/opt/bin:/root/bin
    PermissionsStartOnly=true
    Restart=on-failure
    RestartSec=3
{{- if .WingDevMode }}
    Environment=WING_VERSION="${wing_version}"
    ExecStartPre=/bin/sh -c 'aws s3 cp "s3://${wing_binary_path}" /opt/wing-$${WING_VERSION}/wing; chmod 0755 /opt/wing-$${WING_VERSION}/wing'
{{- else }}
    Environment=AIRWORTHY_VERSION=0.2.0
    Environment=AIRWORTHY_HASH=2d69cfe0b92f86481805c28d0b8ae47a8ffa6bb2373217e7c5215d61fc9efa1d
    Environment=WING_VERSION=0.5.0-alpha1
    ExecStartPre=/bin/sh -c '\
      set -e ;\
      test -x /opt/wing-$${WING_VERSION}/wing && exit 0 ;\
      if [ ! -x /opt/airworthy-$${AIRWORTHY_VERSION}/airworthy ]; then \
        mkdir -p /opt/airworthy-$${AIRWORTHY_VERSION} ;\
        curl -sLo /opt/airworthy-$${AIRWORTHY_VERSION}/airworthy https://github.com/jetstack/airworthy/releases/download/$${AIRWORTHY_VERSION}/airworthy_$${AIRWORTHY_VERSION}_linux_amd64 ;\
        echo "$${AIRWORTHY_HASH}  /opt/airworthy-$${AIRWORTHY_VERSION}/airworthy" | sha256sum -c ;\
        chmod 755 /opt/airworthy-$${AIRWORTHY_VERSION}/airworthy ;\
      fi ;\
      /opt/airworthy-$${AIRWORTHY_VERSION}/airworthy download --output /opt/wing-$${WING_VERSION}/wing --sha256sums https://github.com/jetstack/tarmak/releases/download/$${WING_VERSION}/tarmak_$${WING_VERSION}_checksums.txt  --signature-armored https://github.com/jetstack/tarmak/releases/download/$${WING_VERSION}/tarmak_$${WING_VERSION}_checksums.txt.asc https://github.com/jetstack/tarmak/releases/download/$${WING_VERSION}/wing_$${WING_VERSION}_linux_amd64'
{{- end }}
    ExecStart=/bin/sh -c 'exec /opt/wing-$${WING_VERSION}/wing agent --manifest-url "s3://${puppet_tar_gz_bucket_path}" --cluster-name "${tarmak_cluster}" --instance-name "$$(curl --silent --retry 5 http://169.254.169.254/latest/meta-data/instance-id || echo "unknown")" --server-url "https://bastion.${tarmak_environment}.${tarmak_dns_root}:9443"'

    [Install]
    WantedBy=multi-user.target

- path: /etc/vault/ca.pem
  permissions: '0644'
  encoding: b64
  content: ${vault_ca}

- path: /etc/sysconfig/tarmak
  permissions: '0644'
  content: |
    TARMAK_ROLE=${tarmak_role}
    TARMAK_CLUSTER=${tarmak_cluster}
    TARMAK_DNS_ROOT=${tarmak_dns_root}
    TARMAK_HOSTNAME=${tarmak_hostname}
    TARMAK_ENVIRONMENT=${tarmak_environment}
    TARMAK_DESIRED_COUNT=${tarmak_desired_count}
    TARMAK_VOLUME_ID=${tarmak_volume_id}
    TARMAK_INSTANCE_POOL=${tarmak_instance_pool}

- path: /etc/profile.d/tarmak.sh
  permissions: '0644'
  content: |
    # Add /opt/bin to the path
    if ! echo $PATH | grep -q /opt/bin ; then
      export PATH=$PATH:/opt/bin
    fi

    export PS1="[\u@${tarmak_cluster}|${tarmak_hostname}|\h \W]\$ "

- path: /etc/facter/facts.d/vault_token
  permissions: '0700'
  content: |
    #!/bin/bash
    echo VAULT_TOKEN=${vault_token}

- path: /etc/facter/facts.d/tarmak
  permissions: '0700'
  content: |
    #!/bin/bash
    cat /etc/sysconfig/tarmak

- path: /etc/sudoers
  permissions: '0440'
  content: |
    Defaults    always_set_home

    Defaults    env_reset
    Defaults    env_keep =  "COLORS DISPLAY HOSTNAME HISTSIZE INPUTRC KDEDIR LS_COLORS"
    Defaults    env_keep += "MAIL PS1 PS2 QTDIR USERNAME LANG LC_ADDRESS LC_CTYPE"
    Defaults    env_keep += "LC_COLLATE LC_IDENTIFICATION LC_MEASUREMENT LC_MESSAGES"
    Defaults    env_keep += "LC_MONETARY LC_NAME LC_NUMERIC LC_PAPER LC_TELEPHONE"
    Defaults    env_keep += "LC_TIME LC_ALL LANGUAGE LINGUAS _XKB_CHARSET XAUTHORITY"
    Defaults    secure_path = /sbin:/bin:/usr/sbin:/usr/bin

    root    ALL=(ALL)       NOPASSWD:ALL
    %wheel  ALL=(ALL)       NOPASSWD:ALL

    #includedir /etc/sudoers.d

- path: /etc/spire/ca.pem
  permissions: "0700"
  content: |
    -----BEGIN CERTIFICATE-----
    MIIBzDCCAVOgAwIBAgIJAJM4DhRH0vmuMAoGCCqGSM49BAMEMB4xCzAJBgNVBAYT
    AlVTMQ8wDQYDVQQKDAZTUElGRkUwHhcNMTgwNTEzMTkzMzQ3WhcNMjMwNTEyMTkz
    MzQ3WjAeMQswCQYDVQQGEwJVUzEPMA0GA1UECgwGU1BJRkZFMHYwEAYHKoZIzj0C
    AQYFK4EEACIDYgAEWjB+nSGSxIYiznb84xu5WGDZj80nL7W1c3zf48Why0ma7Y7m
    CBKzfQkrgDguI4j0Z+0/tDH/r8gtOtLLrIpuMwWHoe4vbVBFte1vj6Xt6WeE8lXw
    cCvLs/mcmvPqVK9jo10wWzAdBgNVHQ4EFgQUh6XzV6LwNazA+GTEVOdu07o5yOgw
    DwYDVR0TAQH/BAUwAwEB/zAOBgNVHQ8BAf8EBAMCAQYwGQYDVR0RBBIwEIYOc3Bp
    ZmZlOi8vbG9jYWwwCgYIKoZIzj0EAwQDZwAwZAIwE4Me13qMC9i6Fkx0h26y09QZ
    IbuRqA9puLg9AeeAAyo5tBzRl1YL0KNEp02VKSYJAjBdeJvqjJ9wW55OGj1JQwDF
    D7kWeEB6oMlwPbI/5hEY3azJi16I0uN1JSYTSWGSqWc=
    -----END CERTIFICATE-----

- path: /usr/local/bin/download-spire.sh
  permissions: "0755"
  content: |
    #!/bin/bash

    set -euo pipefail

    SPIRE_VERSION=0.6.1
    DEST_DIR=$${DEST_DIR:-/tmp}

    curl -sL https://github.com/spiffe/spire/releases/download/$${SPIRE_VERSION}/spire-$${SPIRE_VERSION}-linux-x86_64-glibc.tar.gz > $${DEST_DIR}/spire.tar.gz
    cd /tmp
    tar zvxf spire.tar.gz
    cp -r spire-$${SPIRE_VERSION}/. /opt/spire
    mkdir -p /etc/spire/.data

- path: /etc/spire/agent.conf
  permissions: "0755"
  content: |
    agent {
        data_dir = "/etc/spire/.data"
        log_level = "DEBUG"
        plugin_dir = "/etc/spire/plugin"
        server_address = "${vault_ip}"
        server_port = "8081"
        socket_path ="/tmp/agent.sock"
        trust_bundle_path = "/etc/spire/ca.pem"
        trust_domain = "${tarmak_environment}"
        umask = ""
    }

    plugins {
        NodeAttestor "aws_iid" {
            enabled = true
            plugin_data {
                trust_domain = "${tarmak_environment}"
            }
        }
        KeyManager "memory" {
            enabled = true
            plugin_data {
            }
        }
        WorkloadAttestor "k8s" {
            enabled = true
            plugin_data {
                kubelet_read_only_port = "10255"
            }
        }
        WorkloadAttestor "unix" {
            enabled = true
            plugin_data {
            }
        }
    }

- path: /etc/systemd/system/spire-agent.service
  permissions: '0644'
  content: |
    [Unit]
    Description=Spire agent

    [Service]
    ExecStart=/opt/spire/spire-agent run -config /etc/spire/agent.conf
    Restart=on-failure
    RestartSec=10

    [Install]
    WantedBy=multi-user.target

runcmd:
- /usr/local/bin/download-spire.sh
- systemctl enable wing spire-agent.service
- systemctl start wing spire-agent.service
